name: Branch build

on:
  push:
    branches-ignore:
      - main

jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-buildx-action@v1
      - name: Set up JDK 16
        uses: actions/setup-java@v2
        with:
          java-version: '16'
          distribution: 'zulu'
          cache: 'gradle'
      - name: Build & Unit tests
        run: ./gradlew build
      - name: System tests
        run: ./gradlew :web-test:test -PsystemTest --info

  # INITIALIZR:INITIALIZR-DEMO
  init_script_sanity_checks:
    name: Init script sanity checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Installing dependencies
        run: pip install requests

      - name: Execute python script
        run: python init.py --web "true" --kafka_consumer "true" --p "my-awesome-app" --n "no.protector.my.awesome.app" --clean "false" --pf jpa --kafka_producer "true"

  verify_persistence_framework_options:
    name: Verify persistence framework
    needs: [ build, init_script_sanity_checks ]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - database: 'none'
            clean: 'false'
            kafka_producer: 'true'
            web: 'true'
            kafka_consumer: 'true'
            systemTestArgument: -PsystemTest
          - database: 'jdbc'
            clean: 'false'
            kafka_producer: 'true'
            web: 'true'
            kafka_consumer: 'true'
            systemTestArgument: -PsystemTest
          - database: 'jpa'
            clean: 'false'
            kafka_producer: 'true'
            web: 'true'
            kafka_consumer: 'true'
            systemTestArgument: -PsystemTest
          - database: 'none'
            clean: 'true'
            kafka_producer: 'true'
            web: 'true'
            kafka_consumer: 'true'
            systemTestArgument: ''
          - database: 'jdbc'
            clean: 'true'
            kafka_producer: 'true'
            web: 'true'
            kafka_consumer: 'true'
            systemTestArgument: ''
          - database: 'jpa'
            clean: 'true'
            kafka_producer: 'true'
            web: 'true'
            kafka_consumer: 'true'
            systemTestArgument: ''
    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-buildx-action@v1
      - name: Set up JDK 16
        uses: actions/setup-java@v2
        with:
          java-version: '16'
          distribution: 'zulu'
      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Installing dependencies
        run: pip install requests
      - name: Execute python script
        run: python init.py --web "${{ matrix.web }}" --kafka_consumer "${{ matrix.kafka_consumer }}" --p "my-awesome-app" --n "no.protector.my.awesome.app" --clean "${{ matrix.clean }}" --pf "${{ matrix.database }}" --kafka_producer "${{ matrix.kafka_producer }}"
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Verify that applicaton still builds
        run: ./gradlew build ${{ matrix.systemTestArgument }}
# INITIALIZR:INITIALIZR-DEMO